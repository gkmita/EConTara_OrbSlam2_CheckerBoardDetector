1. W programie labelImg tworzy RectBoxes danego obiektu ,
2. Usuwamy wszystko z 'data' oraz 'images/data & images/train & images/test' ,
3. Wklejamy zdjecia do images wraz z odpowiadajacymy zdjeciu kazdemu plikami *.xml  ,
4. Około 10% zdjęć kopiujemy do folderu 'test', natomiast pozostałe zdjęcia kopiujemy do folderu 'train',
5. Otwieramy terminal w 'Zdjecia' i wpisujemy: 
    *-* python3 xml_to_csv.py 
6. W pliku 'generate_tfrecord.py' zmieniamy label'e obiektów (linijka 31)
7. Wpisujemy do terminala dwie linijku kodu z pliku powyzej
8. Edytujemy plik 'ssd_mobilenet_v1_pets.config' , zmieniamy ostatnie linijku kodu (odczytywanie TFrecord z 'data') oraz batch size (linijka 143) -> 1 lub wiecej w zaleznosci od tego czy zadziala 
9. Dodajemy/usuwamy label do pliku object-detection.pbtxt
10. Usuwamy foldery: data, images, ssd_mobilenet_v1_[], training z 'models/research/object_detection'
11. Kopiujemy foldery: data, images, ssd_mobilenet_v1_[], training do 'models/research/object_detection'
12. Otwieramy terminal w models/research , wpisujemy: 
    *-* export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim
    Następnie w  'models/research/object_detection' wpisujemy:
    *-* python3 train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v1_pets.config 
13. Czekamy na pojawienie się  "global step 1: loss = 12.2445 (0.909 sec/step)"

Obiekty są uczone - w trakcie uczenia włączamy wykresy: 
   *-* tensorboard --logdir='training'. 
Gdy wykres "TotalLoss" osiągnie wartość bliską ~1 sieć jest wystarczająco nauczona.


Sprawdzenie:

1. Tworzy nowy folder typu "name_graph" w "object_detection"
2. W terminalu (models/research/object_detection) wpisujemy: 
	python3 export_inference_graph.py \
    	  --input_type image_tensor \
    	  --pipeline_config_path training/ssd_mobilenet_v1_pets.config \
    	  --trained_checkpoint_prefix training/model.ckpt-[numer ostatniego checkpoint'a (folder models/research/object_detection/training] \
    	  --output_directory name_graph
    	  
3. Włączamy jupter notebook , plik "object_detection_tutorial.ipynb" -> Cell -> Run All ( jądro ustawione na Python3)
4. Podziwiamy "nauczone" obiekty. :)
